// Record definition

var Admin = Ext.data.Record.create([
    'id',
    'email',
    'sign_in_count'
    // 'director',
    // 'runtime',
    // {name: 'released', type: 'date', dateFormat: 'Y-m-d'},
    // 'genre',
    // 'tagline',
    // {name: 'price', type: 'float'},
    // {name: 'available', type: 'bool'}

    /* name:
       The name by which the field will be referenced.

       type:
       The data type in which the raw data item will be converted to when
       stored in the record. Values may be 'int', 'float', 'string', 'date',
       or 'bool'.

       dateFormat:
       If the type of data to be held in the field is a date type, then
       we need to specify a format string as used by the Date.parseDate function.
    */
]);

// Store

var store = new Ext.data.Store({
    url: '<%= admin_list_path( :need_data => true ) %>',
    reader: new Ext.data.XmlReader({
        record:'row'                  // The repeated element which contains row information
        // idPath:'id',
        // totalProperty: "results",   // The element which contains the total dataset size (optional)
        // idProperty: "id",           // The element within the row that provides an ID for the record (optional)
        // messageProperty: "msg"
    }, Admin),
    autoLoad: true
});

// Grid

var grid = new Ext.grid.GridPanel({
    renderTo: Ext.getBody(),
    frame: true,
    title: 'Admin Database',
    autoHeight: true,
    width: 700,
    store: store,
    colModel: new Ext.grid.ColumnModel({
        defaultSortable: true,
        columns: [
            {header: "ID",            dataIndex: 'id',            width: 50},
            {header: "Email Address", dataIndex: 'email',         width: 500},
            {header: "Sign in count", dataIndex: 'sign_in_count', width: 150}
        ]
    })
});

// Window

var admin_list_window = new Ext.Window({
    autoHeight: true,
    maximizable : false,
    resizable: false,
    modal: true,
    y: 200,
    width: 700,
    layout: 'fit',
    title: 'Rails4me admin database',

    items: [
      grid
    ],

    tbar:[
        {
            xtype : 'button',
            icon: '../images/exticons/worksheet.png',
            text  : ' Information / About administrator',
            listeners : {
                click: function() {
                    var record = grid.selModel.getSelected();
                    if (grid.getSelectionModel().hasSelection()) {
                        Ext.Ajax.request({
                            url: '<%= admin_show_path %>',
                            method: 'POST',
                            params: {
                                id: record.data.id
                            },
                            success: function(response) {
                                var response_text = response.responseText;
                                eval(response_text);
                            },
                            failure: function(resp) {
                                Ext.Msg.show({
                                    title: 'Error!',
                                    msg: 'Bad response from server!',
                                    icon: Ext.MessageBox.ERROR,
                                    buttons: Ext.MessageBox.OK
                                });
                            }
                        });
                    }
                    else {
                        Ext.Msg.show({
                            title: 'Rails4me_app',
                            msg: 'Please, first select a ROW! ',
                            icon: Ext.MessageBox.INFO,
                            buttons: Ext.MessageBox.OK
                        });
                    }
                }
            }
        }
    ]

});
admin_list_window.show();








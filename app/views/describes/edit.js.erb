Ext.QuickTips.init();

var edit_describe_form = new Ext.form.FormPanel({

    id: 'edit_describe_form',
    url: '<%= update_describe_path(@describe_id) %>',
    labelWidth: 130,
    renderTo: Ext.getBody(),
    frame: true,
    /*autoWidth: true,*/

    items:[
        {
            xtype: 'textfield',
            hidden: true,
            name: 'id'
        },
        {
            xtype: 'textfield',
            fieldLabel: 'Title',
            allowBlank: false,
            width: '98%',
            name: 'title'
        },
        {
            xtype: 'textarea',
            fieldLabel: 'Short description',
            name: 'short_description',
            width: '98%',
            height: 50
        },
        {
            xtype: 'ckeditor',
            fieldLabel: 'Long description',
            name: 'long_description',
            CKConfig: {
                /* Enter your CKEditor config paramaters here or define a custom CKEditor config file. */
                toolbar: 'light',
                uiColor: '#ddd',
                height : 150,
                width: 634
            }
        },
        {
            xtype: 'textfield',
            fieldLabel: 'Keywords',
            width: '98%',
            name: 'keywords'
        },
        {
            xtype: 'textfield',
            fieldLabel: 'Gitlink',
            width: '98%',
            name: 'gitlink'
        },

        {
            xtype: 'textfield',
            fieldLabel: 'Feedback link',
            width: '98%',
            name: 'feedback'
        },
        {

        },

        {
            xtype: 'combo',
            width: '98%',
            id: 'project_combo_store',
            fieldLabel: 'Project',
            hiddenName: 'project_id',
            mode: 'local',
            allowBlank: false,
            valueField: 'id',
            displayField: 'name',
            labelStyle: 'font-weight:bold; color: orange;',

            store: new Ext.data.Store({
                reader: new Ext.data.JsonReader({
                    fields: [
                        {name: "id",   mapping: "id"},
                        {name: "name", mapping: "name"}
                    ]
                }),
                proxy: new Ext.data.HttpProxy({
                    url: '<%= projects_index_path(:need_data => 'true') %>'
                }),
                autoLoad: true,
            })

        },

        {
            xtype: 'combo',
            id: 'public_combo',
            allowBlank: false,
            fieldLabel: 'Public',
            hiddenName: 'public',
            width: '98%',
            emptyText:'Select something...',
            mode: 'local',
            store: new Ext.data.ArrayStore({
                id: 0,
                fields: [
                  'value',
                  'displayText'
                ],
                data: [[true, 'Public'], [false, 'Non public']]
            }),
            valueField: 'value',
            displayField: 'displayText',

            listeners: {
                select: function() {
                      Ext.Msg.alert('Do you really wanna?!');
                }
            }
        }

    ],

    buttons:[
        {

            text: 'Update',
            icon: '../images/exticons/save.png',
            handler: function() {
                edit_describe_form.getForm().submit({
                    success: function(form, action) {
                        // If we come from describes side wont live the project_describes_list_grid we must check it
                        if (Ext.getCmp('edit_project_window')) {
                         Ext.getCmp('edit_project_window').close();
                         Ext.getCmp('project_list_grid').store.reload();
                        }

                        Ext.getCmp('edit_describe_form_window').close();
                        Ext.Msg.alert('Success!', 'You saved the new describe to database successfully!');
                    },
                    failure: function(form, action) {
                        Ext.Msg.show({
                            title: 'Rails4me_app',
                            msg: 'Cannot saved into the database,<br/> please check your fields!',
                            icon: Ext.MessageBox.INFO,
                            buttons: Ext.MessageBox.OK
                        });
                    }
                });

            }

        },

        {

            text: 'Cancel',
            icon: '../images/exticons/cancel.png',
            handler: function() {
                Ext.getCmp('edit_describe_form_window').close();
            }

        }

    ]

});

var new_describe_window = new Ext.Window({
    id: 'edit_describe_form_window',
    scrollable: true,
    autoHeight: false,
    width: 800,
    modal: true,
    layout: 'form',
    title: 'Edit the describe',

    items: [
      // Load form into window
      edit_describe_form
    ]
});

new_describe_window.show();

// Load data from server database
edit_describe_form.getForm().load({
    method:'get',
    url: '<%= edit_describe_path(:id => @describe_id, :need_data => 'true')%>',
    waitMsg: 'Loading data...'
});

// set the combo value to database value
Ext.getCmp('public_combo').setValue(<%= @describe.public %>);
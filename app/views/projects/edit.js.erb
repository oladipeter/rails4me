// If we have describes for the project
<% if @project_describes.length > 0 %>
/* GRID */

// Record definition

var describes_data = Ext.data.Record.create([
    'id',
    'title',
    'short_description'

]);

// Store

var describes_store = new Ext.data.Store({
    id: 'project_describes_store',
    url: '<%= edit_project_path(:id => @project_id, :need_data => true, :from => 'grid') %>',
    reader: new Ext.data.XmlReader({
        record:'row'                  // The repeated element which contains row information
        // idPath:'id',
        // totalProperty: "results",   // The element which contains the total dataset size (optional)
        // idProperty: "id",           // The element within the row that provides an ID for the record (optional)
        // messageProperty: "msg"
    }, describes_data),
    autoLoad: true
});

var describes_grid = new Ext.grid.GridPanel({
    id: 'project_describes_list_grid',
    closable: true,
    title : 'Describes list: <%= @project_describes.length %> describe\(s\)!',
    renderTo : Ext.getBody(),
    store: describes_store,
    autoHeight : true,
    loadMask: true,

    // VIEW

    view : new Ext.grid.GridView(),

    // SELMODEL

    selModel : new Ext.grid.RowSelectionModel({
        singleSelect : true
    }),

    // COLMODEL

    colModel: new Ext.grid.ColumnModel([
        {
            hidden: true,
            dataIndex : 'id'
        },
        {
            header : 'Describe name',
            sortable : true,
            width: '200px',
            dataIndex : 'title'
        },
        {
            header : 'Describe short description',
            sortable : true,
            width: '400px',
            dataIndex : 'short_description'
        }
    ]),

    // LISTENER

    listeners : {
        rowdblclick: function(dv, record, item, index, e) {
            var record = describes_grid.selModel.getSelected();
            Ext.Ajax.request({
                url: '<%= edit_describe_path %>',
                params: {
                  id: record.data.id
                },
                success: function(response) {
                    var response_text = response.responseText;
                    eval(response_text);
                },
                failure: function(resp) {
                    Ext.Msg.alert('Error!', 'Bad response from server!');
                }
            });
        }
    }

});

<% end %>



var edit_project_form = new Ext.form.FormPanel({
    id: 'editProjectForm',
    url: '<%= update_project_path(@project_id) %>',
    labelWidth: 130,
    renderTo: Ext.getBody(),
    frame: true,
    autoWidth: true,

    reader: new Ext.data.XmlReader({
        record: 'project',
        success: '@success'
    },
       [
                {name: 'project[id]', mapping: 'id', hidden: true},
                {name: 'project[name]', mapping: 'name'},
                {name: 'project[description]', mapping: 'description'}
            ]
          //  ['id', 'name', 'owner']
    ),

    items:[
        {
            xtype: 'textfield',
            hidden: true,
            name: 'project[id]'
        },
        {
            xtype: 'textfield',
            fieldLabel: 'Project name',
            allowBlank: false,
            width: '98%',
            name: 'project[name]'
        },
        {
            xtype: 'textarea',
            fieldLabel: 'Project description',
            allowBlank: false,
            width: '98%',
            name: 'project[description]'
        }

    ],

    buttons:[
        {

            text: 'Save',
            icon: '../images/exticons/save.png',
            handler: function() {
                edit_project_form.getForm().submit({
                    success: function(form, action) {
                        Ext.Msg.alert('Success!', 'You saved the new project to database successfully!');
                        Ext.getCmp('edit_project_window').close();
                        Ext.getCmp('project_list_grid').getStore().reload();
                    },
                    failure: function(form, action) {
                        Ext.Msg.show({
                            title: 'Rails4me_app',
                            msg: 'Cannot saved into the database,<br/> please check your fields!',
                            icon: Ext.MessageBox.INFO,
                            buttons: Ext.MessageBox.OK
                        });
                    }
                });

            }

        },

        {

            text: 'Cancel',
            icon: '../images/exticons/cancel.png',
            handler: function() {
                Ext.getCmp('edit_project_window').close();
                // Index grid refresh
                Ext.getCmp('project_list_grid').store.reload();
            }

        }

    ]

});

var edit_project_window = new Ext.Window({
    id: 'edit_project_window',
    autoHeight: true,
    width: 600,
    modal: true,
    layout: 'form',
    title: 'Updating \"<%= @project.name %>\" project',
    contentEL: "Describes to this project : <%= @project_describes %> ",

    items: [
      // Load form and grid into window
      edit_project_form
      <% if @project_describes.length > 0 %>
      ,describes_grid
      <% end %>
    ]
});

edit_project_window.show();

edit_project_form.getForm().load({
    method:'get',
    url: '<%= edit_project_path(:id => @project_id, :need_data => 'true')%>',
    waitMsg: 'Loading...'
});
